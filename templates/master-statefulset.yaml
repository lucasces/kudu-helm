---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kudu.fullname" . }}-master
  labels:
    app.kubernetes.io/name: {{ include "kudu.name" . }}
    helm.sh/chart: {{ include "kudu.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    role: master
spec:
  podManagementPolicy: Parallel
  serviceName: {{ include "kudu.fullname" . }}-master-headless
  replicas: {{ .Values.master.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kudu.name" . }}
      helm.sh/chart: {{ include "kudu.chart" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      role: master
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kudu.name" . }}
        helm.sh/chart: {{ include "kudu.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        role: master
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: kudu-master
          image: {{ .Values.image.repository }}:{{.Values.image.version}}
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          args: ["master"]
          securityContext:
            privileged: true
            capabilities:
              add:
                - IPC_LOCK
          env:
            - name: NAMESPACE
              value: "{{ .Release.Namespace }}"
            - name: DATA_DIR
              value: "/data"
            - name: KUDU_HOME
              value: "/opt/kudu"
            - name: KUDU_MASTERS
              value: {{ template "masterList" . }}
            - name: MASTER_ARGS
              value: "--fs_wal_dir=/data/master \
                --webserver_doc_root=/opt/kudu/www \
                --logtostderr \
                --use_hybrid_clock=false"
          ports:
            - containerPort: 8051
              name: ui
            - containerPort: 7051
              name: rpc
          #livenessProbe:
          #  httpGet:
          #    path: "/"
          #    port: ui
          #  initialDelaySeconds: 120
          #  timeoutSeconds: 1
          #readinessProbe:
          #  timeoutSeconds: 1
          #  httpGet:
          #    path: "/"
          #    port: ui
          volumeMounts:
            - name: storage-master
              mountPath: /data
              readOnly: false
          resources:
{{ toYaml .Values.master.resources | indent 12 }}
{{- with .Values.master.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.master.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.master.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
  volumeClaimTemplates:
    - metadata:
        name: storage-master
        annotations:
          volume.beta.kubernetes.io/storage-class: {{ .Values.master.storageClass }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.master.storageSize }}
          limits:
            storage: {{ .Values.master.storageSize }}
